var ghost = require('../../cfg/ghost.js')
var gapi = require('../../cmn/gapi.js')

exports.itfconf = function() {
    return new CurrentAPI().conf()
}

exports.itfleft = function(req, res, fld, fle) {
    return new CurrentAPI().output(req, res, fld, fle)
}

var CurrentAPI = gapi.BaseAPI.extend({
    conf: function() {
        return {
            auth: false,
            type: 'json',
            itfs: [{
                host: ghost.dscm.dcbusiness.addr,
                port: ghost.dscm.dcbusiness.port,
                iurl: '/wechatCollectListApp?actn=allEarning',
                uuid: 'wechatCollectListApp',
                meth: 'post',
                type: 'sdcm',
                next: [],
                func: function(req, res, fld, fle) {
                    return new CurrentAPI('wechatCollectListApp').callFunc(req, res, fld, fle)
                }
            }]
        }
    },

    doCallFunc: function(uuid, req, res, fld, fle) {
        var userID = req.session.user.userId
        // var userID = 922713
        var ip = gapi.getIPv4(req.user.addr)
        if (gapi.emptyEqual(userID, '')) {
            res.jsonp(gapi.toResult(1, '请先登录'))
            ghost.getLogger().error("[doCallFunc]IP：%s, service: mine.collect.totalCollectDataService, dc: wechatCollectListApp.allEarning, message: 'param error', param: userId=%s", ip, userID)
            return null
        }
        ghost.getLogger().info("[doCallFunc]IP：%s, service: mine.collect.totalCollectDataService, dc: wechatCollectListApp.allEarning, message: 'param', param: userID=%s", ip, userID)
        return {
            'claz': "['long']",
            'json': [userID]
        }
    },

    doOutput: function(req, res, fld, fle) {
        var ip = gapi.getIPv4(req.user.addr)
        if (!req.rslt['wechatCollectListApp']) {
            ghost.getLogger().error("[doOutput]IP：%s, service: mine.collect.totalCollectDataService, dc: wechatCollectListApp.allEarning, message: 'rslt is null', rslt: %s", ip, JSON.stringify(req.rslt['wechatCollectListApp']))
            return gapi.toResult(500, '系统异常')
        }
        if (gapi.emptyNoequal(req.rslt['wechatCollectListApp'].code, 0)) {
            // 这里根据后端服务返回的code值不同提示信息不同
            if (gapi.emptyEqual(req.rslt['wechatCollectListApp'].message, '')) {
                req.rslt['wechatCollectListApp'].message = '数据加载失败'
            }
            ghost.getLogger().error("[doOutput]IP：%s, service: mine.collect.totalCollectDataService, dc: wechatCollectListApp.allEarning, message: 'rslt error', rslt: %s", ip, JSON.stringify(req.rslt['wechatCollectListApp']))
            return gapi.toResult(1, req.rslt['wechatCollectListApp'].message)
        }
        ghost.getLogger().info("[doOutput]IP：%s, service: mine.collect.totalCollectDataService, dc: wechatCollectListApp.allEarning, message: 'success', rslt: %s", ip, JSON.stringify(req.rslt['wechatCollectListApp']))
        return gapi.toResult(0, 'success', req.rslt['wechatCollectListApp'])
    }
})
