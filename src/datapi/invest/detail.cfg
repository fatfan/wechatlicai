var ghost = require('../cfg/ghost.js')
var gapi = require('../cmn/gapi.js')

exports.itfconf = function() {
    return new CurrentAPI().conf()
}

exports.itfleft = function(req, res, fld, fle) {
    return new CurrentAPI().output(req, res, fld, fle)
}

var CurrentAPI = gapi.BaseAPI.extend({
    conf: function() {
        return {
            auth: false,
            type: 'json',
            itfs: [
                {
                    host: ghost.dscm.dcbusiness.addr,
                    port: ghost.dscm.dcbusiness.port,
                    iurl: '/wechatInvestListApp?actn=borrowImplList',
                    uuid: 'detail',
                    meth: 'post',
                    type: 'sdcm',
                    next: [],
                    func: function(req, res, fld, fle) {
                        return new CurrentAPI('detail')
                            .callFunc(req, res, fld, fle)
                    }
                },
                {
                    host: ghost.dscm.dcbusiness.addr,
                    port: ghost.dscm.dcbusiness.port,
                    iurl: '/wechatUserApp?actn=getUserAccount',
                    uuid: 'account',
                    meth: 'post',
                    type: 'sdcm',
                    next: [],
                    func: function(req, res, fld, fle) {
                        return new CurrentAPI('account')
                            .callFunc(req, res, fld, fle)
                    }
                },
                {
                    host: ghost.dscm.dcbusiness.addr,
                    port: ghost.dscm.dcbusiness.port,
                    iurl: '/wechatActivityApp?actn=getActMsg',
                    uuid: 'activity',
                    meth: 'post',
                    type: 'sdcm',
                    next: [],
                    func: function(req, res, fld, fle) {
                        return new CurrentAPI('activity')
                            .callFunc(req, res, fld, fle)
                    }
                }
            ]
        }
    },

    doCallFunc: function(uuid, req, res, fld, fle) {
        var user = req.session.user
        var userId = user !== undefined ? user.userId : null

        var ip = gapi.getIPv4(req.user.addr)

        switch (uuid) {
            case 'detail':
                const id = req.body['id']
                ghost.getLogger().info("[doCallFunc]IP：%s, service: datasvr.invest.getContent, dc: wechatInvestListApp, message: 'param', param: id=%s,userId=%s", ip, id, userId)
                return {
                    'claz': "['java.lang.Long','java.lang.Long']",
                    'json': [id, userId]
                }
            case 'account':
                return {
                    'claz': "['java.lang.String']",
                    'json': [userId]
                }
            case 'activity':
                return {
                    'claz': "['java.lang.Integer']",
                    'json': [0]
                }
        }
    },

    doOutput: function(req, res, fld, fle) {
        var ip = gapi.getIPv4(req.user.addr)

        var detail = req.rslt['detail']
        if (detail === undefined) {
            ghost.getLogger().error("[doOutput]IP：%s, service: datasvr.invest.getContent, dc: wechatInvestListApp, message: 'rslt is null', rslt: %s", ip, JSON.stringify(req.rslt['wechatInvestListApp']))
            req.rslt['detail'] = { code: 500, message: '系统异常' }
        } else if (detail.code !== 0) {
            detail.message = detail.message || '获取信息失败'
            ghost.getLogger().error("[doOutput]IP：%s, service: datasvr.invest.getContent, dc: wechatInvestListApp, message: 'rslt error', rslt: %s", ip, JSON.stringify(detail))
        }

        var account = req.rslt['account']
        if (account === undefined) {
            ghost.getLogger().error("[doOutput]IP：%s, service: datasvr.invest.getContent, dc: wechatUserApp, message: 'rslt is null', rslt: %s", ip, JSON.stringify(account))
            req.rslt['account'] = { code: 500, message: '系统异常' }
        } else if (account.code !== 0) {
            account.message = account.message || '获取信息失败'

            // code:
            // 4019: 未登录
            // 此错误码不打印错误日志
            if (account.code !== 4019) {
                ghost.getLogger().error("[doOutput]IP：%s, service: datasvr.invest.getContent, dc: wechatUserApp, message: 'rslt error', rslt: %s", ip, JSON.stringify(account))
            }
        }

        var activity = req.rslt['activity']
        if (activity === undefined) {
            ghost.getLogger().error("[doOutput]IP：%s, service: datasvr.invest.getContent, dc: wechatActivityApp, message: 'rslt is null', rslt: %s", ip, JSON.stringify(account))
            req.rslt['activity'] = { code: 500, message: '系统异常' }
        } else if (activity.code !== 0) {
            activity.message = activity.message || '获取信息失败'

            // code:
            // 1000: 无活动
            // 此错误码不打印错误日志
            if (activity.code !== 1000) {
                ghost.getLogger().error("[doOutput]IP：%s, service: datasvr.invest.getContent, dc: wechatActivityApp, message: 'rslt error', rslt: %s", ip, JSON.stringify(activity))
            }
        }

        return req.rslt
    }
})
