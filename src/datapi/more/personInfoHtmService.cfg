var ghost = require('../cfg/ghost.js')
var gapi = require('../cmn/gapi.js')

exports.itfconf = function() {
    return new CurrentAPI().conf()
}
exports.itfleft = function(req, res, fld, fle) {
    return new CurrentAPI().output(req, res, fld, fle)
}
var CurrentAPI = gapi.BaseAPI.extend({
    conf: function() {
        return {
            auth: false,
            type: 'json',
            itfs: [
                {
                    host: ghost.dscm.dcbusiness.addr,
                    port: ghost.dscm.dcbusiness.port,
                    iurl: '/wechatNoticeInfoApp?actn=messageList',
                    uuid: 'wechatNoticeInfoApp',
                    meth: 'post',
                    type: 'sdcm',
                    next: [],
                    func: function(req, res, fld, fle) {
                        return new CurrentAPI('wechatNoticeInfoApp')
                            .callFunc(req, res, fld, fle)
                    }
                }
            ]
        }
    },

    doCallFunc: function(uuid, req, res, fld, fle) {
        var page = gapi.getParameter(req, 'page')
        var userId = req.session.user.userId
        var ip = gapi.getIPv4(req.user.addr)
        if (gapi.emptyEqual(page, '')) {
            res.jsonp({ 'code': 1, 'message': '页数不能为空' })
            ghost.getLogger().info("[doCallFunc]IP：%s, service: more.personInfoHtmService, dc: wechatNoticeInfoApp, message: 'param error', param: userId=%s,page=%s", ip, userId, page)
            return null
        }
        ghost.getLogger().info("[doCallFunc]IP：%s, service: more.personInfoHtmService, dc: wechatNoticeInfoApp, message: 'param', param: userId=%s, page=%s", ip, userId, page)
        return {
            'claz': "['java.lang.Long','int']",
            'json': [userId, page]
        }
    },

    doOutput: function(req, res, fld, fle) {
        var ip = gapi.getIPv4(req.user.addr)
        if (!req.rslt['wechatNoticeInfoApp']) {
            ghost.getLogger().error("[doOutput]IP：%s, service: more.personInfoHtmService, dc: wechatNoticeInfoApp, message: 'rslt is null', rslt: %s", ip, JSON.stringify(req.rslt['wechatNoticeInfoApp']))
            return gapi.toResult(500, '系统异常')
        }
        var codes = [0, 4020, 4021]
        if (codes.indexOf(req.rslt['wechatNoticeInfoApp'].code) === -1) {
            // 这里根据后端服务返回的code值不同提示信息不同
            if (gapi.emptyEqual(req.rslt['wechatNoticeInfoApp'].message, '')) {
                req.rslt['wechatNoticeInfoApp'].message = '获取信息失败'
            }
            ghost.getLogger().error("[doOutput]IP：%s, service: more.personInfoHtmService, dc: wechatNoticeInfoApp, message: 'rslt error', rslt: %s", ip, JSON.stringify(req.rslt['wechatNoticeInfoApp']))
            return req.rslt['wechatNoticeInfoApp']
        }
        return gapi.toResult(null, null, req.rslt['wechatNoticeInfoApp'])
    }
})
